  162  kubectl delete calico-node-bg8d4
  163  kubectl delete pod calico-node-bg8d4
  164  kubectl delete pod calico-node-bg8d4 --namespace-kube-system
  165  kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml
  166  kubectl get pods --all-namespaces
  167  sudo ufw status
  168  kubectl logs -p pod calico-node-bg8d4
  169  kubectl logs -p pod calico-node-bg8d4 --namespace=kube-system
  170  kubectl get pods --namespace=kube-system
  171  kubectl logs -p calico-node-bg8d4 --namespace=kube-system
  172  kubectl logs -p calico-node-bg8d4 
  173  kubectl get nodes
  174  kubectl create deployment apache --image=apache
  175  kubectl get deployments
  176  clear
  177  kubectl get nodes
  178  kubectl get deployments
  179  kubectl create service nodeport apache --tcp=80:80
  180  kubectl get svc
  181  kubectl describe deployment apache
  182  kubectl get pods --namespace=All
  183  kubectl get pods --all=namespaces
  184  kubectl get pods --all-namespaces
  185  kubectl get nodes
  186  kubectl drain slave-node --delete-local-data --force --ignore-daemonsets
  187  kubectl delete slavee-node
  188  kubectl delete slave-node
  189  kubectl get nodes
  190  kubectl delete node slave-node
  191  kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml
  192  sudo kubectl apply -f https://docs.projectcalico.org/v2.0/getting-started/kubernetes/installation/hosted/kubeadm/calico.yaml
  193  kubectl get pods --all-namespaces
  194  kubeadm reset
  195  sudo kubeadm reset
  196  kubectl get pods --all-namespaces
  197  sudo kubectl apply -f https://docs.projectcalico.org/v2.1/getting-started/kubernetes/installation/hosted/kubeadm/calico.yaml
  198  sudo kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/kubeadm/calico.yaml
  199  sudo kubectl apply -f https://docs.projectcalico.org/v2.6/getting-started/kubernetes/installation/hosted/kubeadm/1.6/calico.yaml
  200  sudo kubeadm init --pod-network-cidr=192.168.0.0/16 --apiserver-advertise-address=135.222.154.219
  201  sudo kubectl apply -f https://docs.projectcalico.org/v2.1/getting-started/kubernetes/installation/hosted/kubeadm/calico.yaml
  202  sudo kubectl apply -f https://docs.projectcalico.org/v2.6/getting-started/kubernetes/installation/hosted/kubeadm/1.6/calico.yaml
  203  mkdir -p $HOME/.kube
  204  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  205  chown $(id -u):$(id -g) $HOME/.kube/config
  206  sudo kubectl apply -f https://docs.projectcalico.org/v2.6/getting-started/kubernetes/installation/hosted/kubeadm/1.6/calico.yaml
  207  kubectl get nodes
  208  mkdir -p $HOME/.kube
  209  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  210  chown $(id -u):$(id -g) $HOME/.kube/config
  211  kubectl get nodes
  212  kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml
  213  ls
  214  kubectl get pods --all-namespaces
  215  sudo kubeadm reset
  216  kubectl get pods --all-namespaces
  217  sudo kubeadm init --pod-network-cidr=192.168.0.0/16
  218  kubectl get pods --all-namespaces
  219  kubectl get nodes
  220  mkdir -p $HOME/.kube
  221  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  222  chown $(id -u):$(id -g) $HOME/.kube/config
  223  kubectl get nodes
  224  kubectl get pods --all-namespaces
  225  kubectl inspect -p coredns-576cbf47c7-c8ss7
  226  kubectl get pods --all-namespaces
  227  kubectl get nodes
  228  kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml
  229  kubectl get nodes
  230  kubectl get pods --all-namespaces
  231  sudo kubeadm reset
  232  kubectl get pods --all-namespaces
  233  sudo kubeadm init --pod-network-cidr=192.168.0.0/16
  234  kubectl get pods --all-namespaces
  235  kubectl get nodes
  236  mkdir -p $HOME/.kube
  237  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  238  chown $(id -u):$(id -g) $HOME/.kube/config
  239  kubectl get nodes
  240  kubectl get pods --all-namespaces
  241  kubectl get nodes
  242  kubectl describe pod coredns-576cbf47c7-29drh 
  243  kubectl describe pod coredns-576cbf47c7-29drh -n kube-system
  244  sudo kubeadm reset
  245  sudo kubeadm init --pod-network-cidr=192.168.0.0/16
  246  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  247  chown $(id -u):$(id -g) $HOME/.kube/config
  248  kubectl get nodes
  249  kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  250  kubectl get pods --all-namespaces
  251  kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  252  kubectl get pods --all-namespaces
  253  sudo kubeadm reset
  254  sudo kubeadm init --pod-network-cidr=192.168.0.0/16
  255  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  256  chown $(id -u):$(id -g) $HOME/.kube/config
  257  kubectl get pods --all-namespaces
  258  kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  259  kubectl get pods --all-namespaces
  260  kubectl get nodes
  261  kubectl get pods --all-namespaces
  262  kubectl get nodes
  263  kubectl create deployment apache --image=apache
  264  kubectl get deployments
  265  kubectl create service nodeport apache --tcp=80:80
  266  kubectl get svc
  267  kubectl get pods --all-namespaces
  268  kubectl get pods
  269  kubectl describe pod apache-bb579d6cd-5tlsn
  270  docker login
  271  kubectl get pods
  272  docker pull apache
  273  kubectl delete deployment apache
  274  kubectl create deployment apache --image=httpd
  275  kubectl get deployments
  276  kubectl describe deployment apache
  277  kubectl create service nodeport apache --tcp=80:80
  278  kubectl get pods --all-namespaces
  279  kubectl get svc
  280  clear
  281  kubctl get nodes
  282  kubectl get nodes
  283  kubectl get pods --all-namespaces
  284  kubectl describe pod coredns-576cbf47c7-qkw67
  285  kubectl describe pod coredns-576cbf47c7-qkw67 -n kube-system
  286  sudo ls /etc/selinux
  287  sudo vim /etc/selinux/semanage.conf 
  288  sudo vim /etc/selinux/conf
  289  kubectl -n kube-system get deployment coredns -o yaml |   sed 's/allowPrivilegeEscalation: false/allowPrivilegeEscalation: true/g' |   kubectl apply -f -
  290  kubectl get pods --all-namespaces
  291  sudo reboot
  292  vim notes.txt 
  293  kubectl get --namespace kube-system pods
  294  more notes.txt 
  295  vim notes.txt 
  296  ls
  297  more notes.txt 
  298  sudo kubeadm reset
  299  more notes.txt 
  300  vim notes.txt 
  301  kubectl get pods --all-namespace
  302  kubectl get pods
  303  kubectl version
  304  kubectl get pods
  305  sudo kubeadm init --pod-network-cidr=192.168.0.0/16
  306  kubectl get pods
  307  kubectl get nodes
  308  kubeadm reset
  309  sudo kubeadm reset
  310  kubectl get pods
  311  kubectl -n kube-system get deployment coredns -o yaml |   sed 's/allowPrivilegeEscalation: false/allowPrivilegeEscalation: true/g' |   kubectl apply -f -
  312  sudo kubeadm init --pod-network-cidr=192.168.0.0/16
  313  sudo swapoff -a
  314  sudo kubeadm init --pod-network-cidr=192.168.0.0/16
  315  kubectl -n kube-system get deployment coredns -o yaml |   sed 's/allowPrivilegeEscalation: false/allowPrivilegeEscalation: true/g' |   kubectl apply -f -
  316  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  317  chown $(id -u):$(id -g) $HOME/.kube/config
  318  kubectl -n kube-system get deployment coredns -o yaml |   sed 's/allowPrivilegeEscalation: false/allowPrivilegeEscalation: true/g' |   kubectl apply -f -
  319  kubectl get pods --all-namespaces
  320  kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  321  kubectl get pods --all-namespaces
  322  kubectl -n kube-system get deployment coredns -o yaml |   sed 's/allowPrivilegeEscalation: false/allowPrivilegeEscalation: true/g' |   kubectl apply -f -
  323  kubectl get pods --all-namespaces
  324  kubectl -n kube-system get deployment coredns -o yaml |   sed 's/allowPrivilegeEscalation: false/allowPrivilegeEscalation: true/g' |   kubectl apply -f -
  325  kubectl get pods --all-namespaces
  326  kubectl create deployment apache --image=httpd
  327  kubectl get deployments
  328  kubectl create service nodeport apache --tcp=80:80
  329  kubectl get nodes
  330  kubectl get deployments
  331  kubectl get nodes
  332  kubectl get deployments
  333  kubectl create service nodeport apache --tcp=80:80
  334  kubectl describe deployment apache
  335  kubectl get svc
  336  clear
  337  kubectl get nodes
  338  kubectl create deployment hellow --image=hello-world
  339  kubectl get deployments
  340  kubectl get svc
  341  kubectl create service nodeport hellow --tcp=80:80
  342  kubectl get svc
  343  kubectl get nodes
  344  kubectl delete deployment hellow
  345  kubectl create deployment hellow --image=hello-world
  346  kubectl create service nodeport hellow --tcp=80:80
  347  kubectl delete service hellow 
  348  kubectl create service nodeport hellow --tcp=80:80
  349  kubectl get svc
  350  kubectl get pods --all-namespaces
  351  docker pull hello-world
  352  kubectl create deployment hellow1 --image=hello-world:latest
  353  kubectl get pods --all-namespaces
  354  kubectl create deployment apache2 --image=httpd
  355  kubectl get pods --all-namespaces
  356  kubectl create service nodeport apache2 --tcp=80:80
  357  kubectl get svc
  358  kubectl delete service hellow
  359  kubectl delete deployment hellow
  360  kubectl get svc
  361  clear
  362  kubectl nodes
  363  kubectl get nodes
  364  kubectl get svc
  365  kubectl get pods --all-namespaces
  366  kubectl delete pod hellow1-f59b6f7cf-k4tm9 -n kube-system
  367  kubectl delete -p  hellow1-f59b6f7cf-k4tm9 -n kube-system
  368  kubectl delete pod hellow1
  369  kubectl delete pod hellow1-f59b6f7cf-k4tm9 
  370  kubectl get pods --all-namespaces
  371  sudo vim /etc/hosts
  372  hostnamectl set-hostname eagle-master-node
  373  kubectl get nodes
  374  kubectl get deployments
  375  kubectl get svc
  376  kubectl delete service apache
  377  kubectl get svc
  378  kubectl delete service  apache2
  379  kubectl get deployments
  380  kubectl delte deployment hellow1
  381  kubectl delete deployment hellow1
  382  kubectl delete deployment apache
  383  kubectl delete deployment apache2
  384  kubectl get deployments
  385  kubectl get nodes
  386  kubectl get pods
  387  kubectl get pods --all-namespaces
  388  kubectl get nodes
  389  kubectl delete node oriole
  390  kubectl get nodes
  391  kubectl delete node slave-node
  392  kubectl get nodes
  393  kubectl create deployment apache1 --image=httpd
  394  kubectl create deployment apache2 --image=httpd
  395  kubectl get deployments
  396  kubectl create service nodeport apache1 --tcp=80:8
  397  kubectl delete service apache1
  398  kubectl create service nodeport apache1 --tcp=80:80
  399  kubectl create service nodeport apache2 --tcp=80:80
  400  kubectl get svc
  401  kubectl describe services apache1
  402  kubectl get nodes
  403  kubectl describe pods
  404  kubectl get nodes
  405  kubectl create deployment apache3 --image=httpd
  406  kubectl create service nodeport apache3 --tcp=80:80
  407  kubectl describe pods
  408  kubectl get svc
  409  kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard
  410  kubectl get pods --all-namespaces
  411  cd /etc/apt
  412  ls
  413  more apt.conf
  414  export http_proxy="http://proxy.lbs.alcatel-lucent.com:8000"
  415  export http_proxys="http://proxy.lbs.alcatel-lucent.com:8000"
  416  export https_proxy="http://proxy.lbs.alcatel-lucent.com:8000"
  417  export HTTP_PROXY="http://proxy.lbs.alcatel-lucent.com:8000"
  418  export HTTPS_PROXY="http://proxy.lbs.alcatel-lucent.com:8000"
  419  sudo kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard
  420  kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml
  421  kubectl proxy
  422  more /etc/hosts
  423  ping 127.0.0.1:8001
  424  kubctl get svc
  425  cd
  426  kubectl get svc
  427  kubectl get services -n kube-system
  428  kubectl cluster-info
  429  kubctl get nodes
  430  kubectl get nodes
  431  kubectl get svc
  432  kubectl get pods --all-namespaces
  433  kubectl get services -n kube-system
  434  kubectl get nodes
  435  kubectl get pods --all-namespaces
  436  kubectl get svc
  437  kubectl get pods -O wide --all=namespaces
  438  kubectl get pods -O wide --all-namespaces
  439  kubectl get pods -o wide --all-namespaces
  440  kubectl version
  441  kubectl get pods -o wide --all-namespaces
  442  sudo sysctl net.bridge.bridge-nf-call-iptables=1
  443  sudo kubeadm init
  444  kubectl get pods -o wide --all-namespaces
  445  sudo kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  446  export http_proxy="http://proxy.lbs.alcatel-lucent.com:8000"
  447  export https_proxy="http://proxy.lbs.alcatel-lucent.com:8000"
  448  export HTTP_PROXY="http://proxy.lbs.alcatel-lucent.com:8000"
  449  export HTTPS_PROXY="http://proxy.lbs.alcatel-lucent.com:8000"
  450  sudo kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  451  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  452  chown $(id -u):$(id -g) $HOME/.kube/config
  453  sudo kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  454  kubectl get pods -o wide --all-namespaces
  455  kubectl get nodes
  456  kubectl get pods -o wide --all-namespaces
  457  kubectl describe pods coredns-576cbf47c7-k9ct8
  458  kubectl describe pods 
  459  kubectl describe pods -n kube-system
  460  kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml
  461  kubectl get pods -o wide --all-namespaces
  462  kubectl proxy
  463  sudo kubeadm reset
  464  sudo reboot
  465  kubectl proxy
  466  kubectl -n kube-system get secret
  467  kubectl -n kube-system describe secret replicaset-controller-token-4krlb
  468  kubectl create serviceaccount dashboard -n default
  469  kubectl create clusterrolebinding dashboard-admin -n default   --clusterrole=cluster-admin   --serviceaccount=default:dashboard
  470  kubectl get secret $(kubectl get serviceaccount dashboard -o jsonpath="{.secrets[0].name}") -o jsonpath="{.data.token}" | base64 --decode
  471  You should get the token like this:
  472  kube dashboard token - install kubernetes - edureka
  473  4. Copy this token and paste it in Dashboard Login Page, by selecting token option
  474  kube dashboard token entry - install kubernetes - edureka
  475  5. You have successfully logged into your dashboard!
  476  kubernetes dashboard view - install kubernetes - edureka
  477  Steps For Only Kubernetes Node VM (knode)
  478  It is time to get your node, to join the cluster! This is probably the only step that you will be doing on the node, after installing kubernetes on it.
  479  Run the join command that you saved, when you ran ‘kubeadm init’ command on the master.
  480  Note: Run this command with “sudo”.
  481  sudo kubeadm join --apiserver-advertise-address=<ip-address-of-the master> --pod-network-cidr=192.168.0.0/16
  482  kubernetes node joined cluster - install kubernetes - edureka
  483  Bingo! Your Kubernetes Cluster is ready if you get something similar to the above screenshot. 
  484  Structured DevOps Training
  485  So that brings an end to this blog on how to install kubernetes on Ubuntu 16.04. Do look out for other blogs in this series which will explain the various other aspects of Kubernetes. 
  486  About Author
  487  Hemant Sharma
  488  Published on Jul 16,2018
  489  Share on 
  490  Got your brain cells running?
  491  Stay tuned to latest technology updates
  492  Enter your Email Address
  493  Recommended Articles for you
  494  Browse Categories
  495  Big Data AnalyticsBig Data NoSQLBlockchainBusiness IntelligenceCloud ComputingCyber SecurityDeep LearningFinanceFrameworksMarketingMobile DevelopmentOperationsProgrammingProject ManagementRobotic Process AutomationSuccess StorySystems EngineeringTesting
  496  Comments
  497  11 Comments
  498  kubectl get secret $(kubectl get serviceaccount dashboard -o jsonpath="{.secrets[0].name}") -o jsonpath="{.data.token}" | base64 --decode
  499  kubectl get pods --all-namespaces
  500  kubectl get secret $(kubectl get serviceaccount dashboard -o jsonpath="{.secrets[0].name}") -o jsonpath="{.data.token}" | base64 --decode
  501  kubectl create -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml
  502  kubectl proxy
  503  more notes.txt 
  504  vim notes.txt 
  505  kubectl get nodes
  506  kubeadm reset
  507  sudo kubeadm reset
  508  more notes.txt 
  509  vim notes.txt 
  510  more notes.txt
  511  vim notes.txt 
  512  sudo rm /usr/bin/ks
  513  git clone github.com/ksonnet/ksonnet
  514  go get github.com/ksonnet/ksonnet
  515  sudo apt install golang-go
  516  go get github.com/ksonnet/ksonnet
  517  export GOPATH=$HOME/go
  518  go get github.com/ksonnet/ksonnet
  519  ls
  520  cd go
  521  ls
  522  cd src
  523  ls
  524  cd
  525  go get github.com/ksonnet/ksonnet
  526  sudo apt remove golang-go
  527  ls
  528  rm -rf go
  529  git clone https://github.com/ksonnet/ksonnet.git
  530  ls
  531  cd ksonnet/
  532  ls
  533  make install
  534  sudo apt install golang-go
  535  make install
  536  cd ../
  537  ls
  538  rm -rf ks_0.12.0_linux_amd64/
  539  tar -xvf ks.tar
  540  cd ks_0.12.0_linux_amd64/
  541  ls
  542  sudo mv ks /usr/bin
  543  chown root:root /usr/bin/ks    
  544  chmod a+x /usr/bin/ks
  545  cd ../
  546  wget -O ks.tar.gz  https://github.com/ksonnet/ksonnet/releases/download/v0.12.0/ks_0.13.0_linux_amd64.tar.gz
  547  wget -O ks.tar.gz  https://github.com/ksonnet/ksonnet/releases/download/v0.13.0/ks_0.13.0_linux_amd64.tar.gz
  548  ls
  549  rm -rf ks.tar
  550  rm -rf ks_0.12.0_linux_amd64/
  551  tar -zxf ks.tar.gz 
  552  ls
  553  sudo cp ks_0.13.0_linux_amd64/ks /usr/bin
  554  ls
  555  sudo vim /etc/hosts
  556  clear 
  557  sudo vim /etc/hosts
  558  kubectl get nodes
  559  more notes.txt 
  560  go version
  561  sudo apt install golang-go
  562  ks version
  563  go version
  564  ls
  565  rm -rf guestbook/
  566  ks init guestbook --context ks-dev
  567  echo $KUBECONFIG
  568  kubectl config view
  569  export KUBECONFIG=$KUBECONFIG:$HOME/.kube/config
  570  ls $HOME/.kube
  571  ls
  572  rm -rf guestbook/
  573  ks init guestbook --context ks-dev
  574  kubectl env list
  575  kubectl  list env
  576  kubectl envs  list
  577  kubectl --help
  578  kubectl list --help
  579  kubectl get envs
  580  kubectl get --help
  581  kubectl get env
  582  kubectl list --help
  583  kubectl env --help
  584  kubectl envs --help
  585  echo $KUBECONFIG
  586  kubectl --version
  587  kubectl version
  588  cd guestbook/
  589  ls
  590  ls environments/
  591  ls environments/default/
  592  ks generate deployed-service guestbook-ui   --image gcr.io/heptio-images/ks-guestbook-demo:0.1   --type ClusterIP
  593  ks show default
  594  ks env list
  595  rm -rf guestbook
  596  cd ../
  597  rm -rf guestbook
  598  sudo ks init guestbook --context ks-dev
  599  ls -l
  600  sudo rm -rf root
  601  sudo rm -rf guestbook/
  602  kubectl create namespace ks-dev
  603  CURRENT_CONTEXT=$(kubectl config current-context)
  604  CURRENT_CLUSTER=$(kubectl config get-contexts $CURRENT_CONTEXT | tail -1 | awk '{print $3}')
  605  CURRENT_USER=$(kubectl config get-contexts $CURRENT_CONTEXT | tail -1 | awk '{print $4}')
  606  kubectl config set-context ks-dev   --namespace ks-dev   --cluster $CURRENT_CLUSTER   --user $CURRENT_USER
  607  ls
  608  rm -rf guestbook/
  609  ks init guestbook --context ks-dev 
  610  ks show default
  611  ks env add default
  612  ks add env default --context ks-dev 
  613  ks add env default 
  614  ks env add default --context ks-dev
  615  ks init guestbook --context ks-dev 
  616  rm -rf guestbook/
  617  ks init guestbook --context ks-dev 
  618  ks env add default --context ks-dev
  619  ks env add default 
  620  cd guestbook/
  621  ks env add default 
  622  ks show default
  623  cd
  624  rm -rf guestbook/
  625  ks init ks-example 
  626  ls
  627  rm -rf ksonnet
  628  go get github.com/ksonnet/ksonnet
  629  echo $GOPATH
  630  ls /home/appml/go
  631  ls /home/appml/go/src
  632  ls /home/appml/go/src/github.com/
  633  ls /home/appml/go/src/github.com/ksonnet/
  634  ls /home/appml/go/src/github.com/ksonnet/ksonnet/
  635  sudo make install
  636  pwd
  637  cd go
  638  ls
  639  cd src/github.com/ksonnet/ksonnet/
  640  ls
  641  make install
  642  echo $GOROOT
  643  whereis go
  644  /usr/local/go version
  645  ls /usr/local/go
  646  ls /usr/local/go/bin/
  647  ls /usr/local/go/bin/go version
  648  ls /usr/local/go/bin/go --version
  649  export GOROOT=$HOME/go
  650  export PATH=$PATH:$GOROOT/bin
  651  make install
  652  go env
  653  unset GOROOT
  654  go env
  655  make install
  656  echo $http_proxy
  657  export HTTPS_PROXY="http://proxy.lbs.alcatel-lucent.com:8000"
  658  export HTTP_PROXY="http://proxy.lbs.alcatel-lucent.com:8000"
  659  export http_proxy="http://proxy.lbs.alcatel-lucent.com:8000"
  660  export https_proxy="http://proxy.lbs.alcatel-lucent.com:8000"
  661  make install
  662  go get golang.org/x/net/context
  663  make install
  664  cd 
  665  cd go
  666  ls
  667  cd pkg
  668  ls
  669  cd linux_amd64/
  670  ls
  671  cd golang.org/
  672  ls
  673  cd x
  674  ls
  675  cd net
  676  ls
  677  ls context.a 
  678  cd /home/appml/go/src/context
  679  export GOPATH=$GOPATH:$HOME/go/pkg
  680  echo $GOPATH
  681  export GOPATH=/home/appml/go
  682  echo $GOPATH
  683  ls context.a 
  684  more context.a 
  685  cd
  686  cd go/src
  687  ls
  688  mkdir context
  689  cp ../pkg/linux_amd64/golang.org/x/net/context.a  context/
  690  ls
  691  cd github.com/
  692  ls
  693  cd ksonnet/ksonnet/
  694  make install
  695  cd 
  696  cd go/
  697  ls
  698  cd src
  699  ls
  700  rm -rf context/
  701  cd github.com/ksonnet/ksonnet/
  702  make install
  703  ls
  704  ls vendor/
  705  ls golang.org
  706  ls
  707  cd vendor/
  708  ls
  709  ls golang.org/
  710  ls golang.org/x/
  711  ls golang.org/x/net
  712  ls golang.org/x/net/context/
  713  cd ../
  714  make install
  715  ls
  716  cd vendor
  717  ls
  718  mkdir context
  719  cp golang.org/ context/
  720  cp -r golang.org/ context/
  721  cd ../
  722  sudo rm -rf /usr/bin/ks
  723  make install
  724  ls /home/appml/go/src/github.com/ksonnet/ksonnet/vendor/context
  725  ls /home/appml/go/src/github.com/ksonnet/ksonnet/vendor/context/golang.org/
  726  ls /home/appml/go/src/github.com/ksonnet/ksonnet/vendor/context/golang.org/x
  727  ls /home/appml/go/src/github.com/ksonnet/ksonnet/vendor/context/golang.org/x/net
  728  rm -rf vendor/context/
  729  cp -r /home/appml/go/src/github.com/ksonnet/ksonnet/vendor/context/golang.org/x/net/context  vendor/
  730  cp -r /home/appml/go/src/github.com/ksonnet/ksonnet/vendor/golang.org/x/net/context/ vendor/
  731  ls vendor
  732  make install
  733  cd
  734  go version
  735  ks version
  736  ls
  737  sudo cp ks_0.13.0_linux_amd64/ks /usr/bin/
  738  chown root:root /usr/bin/ks    
  739  sudo chown root:root /usr/bin/ks    
  740  sudo chmod a+x /usr/bin/ks
  741  ks version
  742  wget -O ks.tar.gz  https://github.com/ksonnet/ksonnet/releases/download/v0.11.0/ks_0.11.0_linux_amd64.tar.gz
  743  ls
  744  tar -zxf go1.11.2.linux-amd64.tar.gz 
  745  ls
  746  ls -l
  747  tar -zxf ks.tar.gz
  748  ls
  749  sudo cp ks_0.11.0_linux_amd64/ks /usr/bin
  750  sudo chown root:root /usr/bin/ks    
  751  sudo chmod a+x /usr/bin/ks
  752  ls
  753  rm -rf ks-example
  754  echo $KUBECONFIG
  755  ks init ks-example 
  756  ks version
  757  ls
  758  kubectl version
  759  ls
  760  rm -rf ks-example/
  761  echo $KUBECONFIG
  762  ls .kube
  763  kubectl get nodes -o yaml
  764  echo $KUBECONFIG
  765  ls .kube
  766  ks init ks-example
  767  kubectl delete namespaces ks-dev
  768  mkdir ${KUBEFLOW_SRC}
  769  cd ${KUBEFLOW_SRC}
  770  export KUBEFLOW_TAG=v0.3.1
  771  curl https://raw.githubusercontent.com/kubeflow/kubeflow/${KUBEFLOW_TAG}/scripts/download.sh | bash
  772  ls
  773  echo $KUBEFLOW_SRC
  774  ls
  775  ls kubeflow_src
  776  export KUBEFLOW_SRC=$HOME/kubeflow_src
  777  cd kubeflow_src
  778  ls
  779  rm -rf *
  780  cd ../
  781  cd
  782  pwd
  783  cd ${KUBEFLOW_SRC}
  784  export KUBEFLOW_TAG=v0.3.1
  785  curl https://raw.githubusercontent.com/kubeflow/kubeflow/${KUBEFLOW_TAG}/scripts/download.sh | bash
  786  ls
  787  cd
  788  ls
  789  ls kubeflow_config
  790  cd kubeflow_config
  791  ls
  792  rm *
  793  cd ../
  794  ${KUBEFLOW_SRC}/scripts/kfctl.sh init ${KFAPP} --platform none
  795  ls
  796  cd kubeflow_src
  797  ${KUBEFLOW_SRC}/scripts/kfctl.sh init ${KFAPP} --platform none
  798  cd
  799  ${KUBEFLOW_SRC}/scripts/kfctl.sh 
  800  ${KUBEFLOW_SRC}/scripts/kfctl.sh init ${KFAPP}
  801  export KFAPP=$HOME/kubflow_config
  802  echo $KFAPP
  803  ls
  804  ${KUBEFLOW_SRC}/scripts/kfctl.sh init ${KFAPP} --platform none
  805  rm -rf kubflow_config
  806  ${KUBEFLOW_SRC}/scripts/kfctl.sh init ${KFAPP} --platform none
  807  rm -rf kubeflow_config
  808  ${KUBEFLOW_SRC}/scripts/kfctl.sh init ${KFAPP} --platform none
  809  export KFAPP=$HOME/kubeflow_config
  810  ${KUBEFLOW_SRC}/scripts/kfctl.sh init ${KFAPP} --platform none
  811  rm -rf kubeflow_config
  812  ${KUBEFLOW_SRC}/scripts/kfctl.sh init ${KFAPP} --platform none
  813  ls
  814  rm -rf kubeflow_config
  815  rm -rf kubeflow_config--platform/
  816  rm -rf kubflow_config
  817* 
  818  echo $KFAPP
  819  ${KUBEFLOW_SRC}/scripts/kfctl.sh init ${KFAPP} --platform none
  820  echo $KFAPP
  821  vim ${KUBEFLOW_SRC}/scripts/kfctl.sh
  822  env grep KUBE
  823  env | grep KUBE
  824  ls
  825  ~/kubeflow_src/scripts/kfctl.sh init kubflow_app --platform none
  826  cd kubeflow_app
  827  ls
  828  cd kubflow_app
  829  ls
  830  cd
  831  ~/kubeflow_src/scripts/kfctl.sh init kubeflow_app --platform none
  832  ls
  833  rm -rf kubflow_app
  834  cd kubeflow_app
  835  ls
  836  ../kubeflow_src/scripts/kfctl.sh generate k8s
  837  unset NAMESPACE
  838  ../kubeflow_src/scripts/kfctl.sh generate k8s
  839  export NAMESPACE=kubeflow
  840  ls
  841  cd ks_app
  842  ls
  843  cd ../
  844  rm -rf ks_app
  845  cd 
  846  cd kubeflow_app
  847  ../kubeflow_src/scripts/kfctl.sh generate k8s
  848  echo $NAMESPACE
  849  ../kubeflow_src/scripts/kfctl.sh generate k8scd
  850  cd
  851  echo $GOPATH
  852  go get github.com/ksonnet/ksonnet
  853  cd go/src/github.com/ksonnet/
  854  cd ksonnet/
  855  ls
  856  make install
  857  echo $GOROOT
  858  cd vendor/
  859  ls
  860  cd ../
  861  cd ../../
  862  cd ../
  863  ls
  864  cd ksonnet/ksonnet/vendor
  865  cd github.com/ksonnet/ksonnet/vendor
  866  ls
  867  cd golang.org/
  868  ls
  869  cd x
  870  ls
  871  cd net
  872  ls
  873  cd
  874  echo $GOPATH
  875  cd "${GOPATH}/src/github.com/ksonnet/ksonnet"
  876  make docker-image
  877  echo $http_proxy
  878  make docker-image
  879  curl -V http://dl-cdn.alpinelinux.org/alpine/v3.8/main/x86_64/APKINDEX.tar.gz
  880  curl -V -S http://dl-cdn.alpinelinux.org/alpine/v3.8/main/x86_64/APKINDEX.tar.gz > /dev/null
  881  make docker-image
  882  ls
  883  more Makefile 
  884  cd
  885  cd .docker
  886  ls
  887  vim config.json 
  888  echo $http_proxy
  889  cd
  890  cd "${GOPATH}/src/github.com/ksonnet/ksonnet"
  891  make docker-image
  892  cd
  893  vim .bashrc
  894  echo $KFAPP
  895  cd
  896  ${KUBEFLOW_SRC}/scripts/kfctl.sh init ${KFAPP} --platform none
  897  cd ${KFAPP}
  898  ${KUBEFLOW_SRC}/scripts/kfctl.sh generate k8s
  899  kubectl get nodes
  900  echo $KFAPP
  901  echo $KUBEFLOW_SRC
  902  cd
  903  ls
  904  cd "${GOPATH}/src/github.com/ksonnet/ksonnet"
  905  make docker-image
  906  docker run hello-world
  907  cd
  908  docker pull golang
  909  docker run -it golang bash
  910  docker ps | grep ks
  911  docker ps
  912  ks version
  913  docker ps
  914  docker ps | grep v0.13
  915  docker ps
  916  docker ps | wc
  917  echo $KUBEFLOW_TAG
  918  ls
  919  cd projects/
  920  ls
  921  cd kf-eks-basic/
  922  ../scripts/kfctl.sh init kf-eks-basic --platform none
  923  ls
  924  cd ../
  925  ls
  926  rm -rf kf-eks-basic/
  927  scripts/kfctl.sh init kf-eks-basic --platform none
  928  ls
  929  cd kf-eks-basic/
  930  ls
  931  ../scripts/kfctl.sh apply k8s
  932  ls
  933  cd ../
  934  ls
  935  ls kf-eks-basic/
  936  echo $KFAPP
  937  cd ../
  938  ls
  939  rm -rf kubeflow_app
  940  rm -rf kubeflow_config
  941  rm -rf kubeflow
  942  cd projects/
  943  ls
  944  echo $KUBEFLOW_SRC
  945  ls
  946  unset KUBEFLOW_SRC
  947  unset KUBEFLOW_CONFIG
  948  ls
  949  rm -rf *
  950  ls
  951  mkdir kf_src
  952  mkdir kf_config
  953  export KUBEFLOW_TAG=v0.3.1
  954  curl https://raw.githubusercontent.com/kubeflow/kubeflow/${KUBEFLOW_TAG}/scripts/download.sh | bash
  955  ls
  956  scripts/kfctl.sh init kf-eks-basic --platform none
  957  scripts/kfctl.sh generate k8s
  958  ls
  959  cd kf-eks-basic/
  960  cd ../
  961  ls
  962  more scripts/kfctl.sh
  963  cat scripts/kfctl.sh | grep KFAPP
  964  cat scripts/kfctl.sh | grep _SRC
  965  ls
  966  cd kf-eks-basic/
  967  ls
  968  ../scripts/kfctl.sh generate k8s
  969  kubectl get pods --all-namespaces
  970  ../scripts/kfctl.sh apply k8s
  971  kubectl get pods --all-namespaces
  972  get nodes
  973  kubctl get nodes
  974  kubectl get nodes
  975  kubectl get pods --all-namespaces
  976  kubectl env list
  977  kubectl list env
  978  ls
  979  cd ks-app
  980  ls
  981  cd ks_app
  982  ls
  983  more app.yaml 
  984  ls
  985  cd environments/
  986  ls
  987  cd ../
  988  ls
  989  cd ../
  990  ls
  991  more env.sh 
  992  ls
  993  cd ../
  994* 
  995  cd scripts/
  996  ls
  997  vim kfctl.sh
  998  cd
  999  kubectl get pods --all-namespaces
 1000  ls
 1001  cd projects/
 1002  ls
 1003  cd kubeflow/
 1004  ls
 1005  cd examples/
 1006  ls
 1007  cd prototypes/
 1008  ls
 1009  cd
 1010  cd projects/
 1011  ls
 1012  cd
 1013  git clone https://github.com/kubeflow/examples.git
 1014  ls
 1015  ls ks-example/
 1016  mv examples projects/
 1017  ls
 1018  cd projects/
 1019  ls
 1020  cd examples/
 1021  ls
 1022  kubectl version
 1023  ls
 1024  cd ../
 1025  ls
 1026  cd kf-eks-basic
 1027  ls
 1028  ls ks_app/
 1029  cd ks_app
 1030  ls
 1031  cd vendor/
 1032  ls
 1033  cd kubeflow/
 1034  ls
 1035  cd examples/
 1036  ls
 1037  ls prototypes/
 1038  cd ../../
 1039  cd ../
 1040  ls
 1041  ls kf_config
 1042  cd examples/
 1043  ls
 1044  cd object_detection/
 1045  ls
 1046  cd ks-app
 1047  ls
 1048  more app.yaml 
 1049  more ~/projects/kf-eks-basic/ks_app/app.yaml 
 1050  cd ../../../
 1051  ls
 1052  cd kf-eks-basic/
 1053  ls
 1054  cd ks_app/
 1055  ls
 1056  ENV=default
 1057  ks env add ${ENV} --context=`kubectl config current-context`
 1058  ks env set ${ENV} --namespace kubeflow
 1059  vim storage_def.yaml
 1060  more storage_def.yaml 
 1061  vim storage_def.yaml
 1062  kubectl create -f storage_def.yaml 
 1063  vim storage_def.yaml 
 1064  kubectl create -f storage_def.yaml 
 1065  kubectl get storageclass
 1066  ks param set pets-pvc accessMode "ReadWriteMany"
 1067  ks param set local-slow accessMode "ReadWriteMany"
 1068  ls
 1069  more app.yaml 
 1070  ls
 1071  more storage_def.yaml 
 1072  more ~/.kube/config
 1073  ls
 1074  vim app.yaml 
 1075  cd
 1076  cd projects/
 1077  ls
 1078  cd examples/
 1079  ls
 1080  cd object_detection/ks-app/
 1081  ls
 1082  more app.yaml 
 1083  ENV=default
 1084  ks env add ${ENV} --context=`kubectl config current-context`
 1085  ks env set ${ENV} --namespace kubeflow
 1086  ks param set pets-pvc accessMode "ReadWriteMany"
 1087  ks param set pets-pvc storage "20Gi"
 1088  ks apply ${ENV} -c pets-pvc
 1089  kubectl config current-context
 1090  cd environments/
 1091  ls
 1092  cd
 1093  ls
 1094  cd projects/
 1095  ls
 1096  cd kf-eks-basic/
 1097  ls
 1098  cd ks_app/
 1099  ls
 1100  cd environments/
 1101  ls
 1102  ls default/
 1103  cp -r default/ ../../../examples/object_detection/ks-app/environments/
 1104  cd ../../../
 1105  cd examples/object_detection/ks-app/
 1106  ls
 1107  ks env set ${ENV} --namespace kubeflow
 1108  ks param set pets-pvc accessMode "ReadWriteMany"
 1109  ks param set pets-pvc storage "20Gi"
 1110  ks apply ${ENV} -c pets-pvc
 1111  kubectl get storage-class
 1112  kubectl get storageclass
 1113  PVC="pets-pvc"
 1114  MOUNT_PATH="/pets_data"
 1115  DATASET_URL="http://www.robots.ox.ac.uk/~vgg/data/pets/data/images.tar.gz"
 1116  ANNOTATIONS_URL="http://www.robots.ox.ac.uk/~vgg/data/pets/data/annotations.tar.gz"
 1117  MODEL_URL="http://download.tensorflow.org/models/object_detection/faster_rcnn_resnet101_coco_2018_01_28.tar.gz"
 1118  PIPELINE_CONFIG_URL="https://raw.githubusercontent.com/kubeflow/examples/master/object_detection/conf/faster_rcnn_resnet101_pets.config"
 1119  ks param set get-data-job mounthPath ${MOUNT_PATH}
 1120  ks param set get-data-job pvc ${PVC}
 1121  ks param set get-data-job urlData ${DATASET_URL}
 1122  ks param set get-data-job urlAnnotations ${ANNOTATIONS_URL}
 1123  ks param set get-data-job urlModel ${MODEL_URL}
 1124  ks param set get-data-job urlPipelineConfig ${PIPELINE_CONFIG_URL}
 1125  ANNOTATIONS_PATH="${MOUNT_PATH}/annotations.tar.gz"
 1126  DATASET_PATH="${MOUNT_PATH}/images.tar.gz"
 1127  PRE_TRAINED_MODEL_PATH="${MOUNT_PATH}/faster_rcnn_resnet101_coco_2018_01_28.tar.gz"
 1128  ks param set decompress-data-job mountPath ${MOUNT_PATH}
 1129  ks param set decompress-data-job pvc ${PVC}
 1130  ks param set decompress-data-job pathToAnnotations ${ANNOTATIONS_PATH}
 1131  ks param set decompress-data-job pathToDataset ${DATASET_PATH}
 1132  ks apply ${ENV} -c pets-pvc
 1133  ks apply ${ENV} -c get-data-job
 1134  ks param set decompress-data-job pathToDataset ${DATASET_PATH}
 1135  ks param set decompress-data-job pathToModel ${PRE_TRAINED_MODEL_PATH}
 1136  ks apply ${ENV} -c decompress-data-job
 1137  OBJ_DETECTION_IMAGE="lcastell/pets_object_detection"
 1138  DATA_DIR_PATH="${MOUNT_PATH}"
 1139  OUTPUT_DIR_PATH="${MOUNT_PATH}"
 1140  ks param set create-pet-record-job image ${OBJ_DETECTION_IMAGE}
 1141  ks param set create-pet-record-job dataDirPath ${DATA_DIR_PATH}
 1142  ks param set create-pet-record-job outputDirPath ${OUTPUT_DIR_PATH}
 1143  ks param set create-pet-record-job mountPath ${MOUNT_PATH}
 1144  ks param set create-pet-record-job pvc ${PVC}
 1145  ks apply ${ENV} -c create-pet-record-job
 1146  docker pull lcastell/pets_object_detection
 1147  PIPELINE_CONFIG_PATH="${MOUNT_PATH}/faster_rcnn_resnet101_pets.config"
 1148  TRAINING_DIR="${MOUNT_PATH}/train"
 1149  ks param set tf-training-job image ${OBJ_DETECTION_IMAGE}
 1150  ks param set tf-training-job mountPath ${MOUNT_PATH}
 1151  ks param set tf-training-job pvc ${PVC}
 1152  ks param set tf-training-job numPs 1
 1153  ks param set tf-training-job numWorkers 1
 1154  ks param set tf-training-job pipelineConfigPath ${PIPELINE_CONFIG_PATH}
 1155  ks param set tf-training-job trainDir ${TRAINING_DIR}
 1156  ks apply ${ENV} -c tf-training-job
 1157  kubectl -n kubeflow describe tfjobs tf-training-job
 1158  ls -l
 1159  ls -la
 1160  history
 1161  history > t
